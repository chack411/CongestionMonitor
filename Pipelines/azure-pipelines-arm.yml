# ARM Deployment for Congestion Monitor resources

trigger:
  branches:
   include:
     - master
  paths:
    include:
      - ARMTemplates/template.json
      - ARMTemplates/parameters.json
      - Pipelines/azure-pipelines-arm.yml

pr:
  branches:
   include:
     - master
  paths:
    include:
      - ARMTemplates/template.json
      - ARMTemplates/parameters.json
      - Pipelines/azure-pipelines-arm.yml

variables:
- group: cm-resource-param
- name: vmImageName
  value: 'ubuntu-latest'
- name: workingDirectory
  value: '$(System.DefaultWorkingDirectory)/ARMTemplates'

stages:
- stage: Deployment
  displayName: 'Deployment with ARM Template'

  jobs:
  - job: Deploy
    displayName: 'ARM Deployment Job'
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Run ARM Deployment'
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Edtter (bd5c9737-10a5-4178-9b83-fd223f7b4bb4)'
        subscriptionId: 'bd5c9737-10a5-4178-9b83-fd223f7b4bb4'
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceName)
        location: $(locationName)
        templateLocation: 'Linked artifact'
        csmFile: '$(workingDirectory)/template.json'
        csmParametersFile: '$(workingDirectory)/parameters.json'
        overrideParameters: -sites_cm_repositoryToken $(repositoryToken)
        deploymentMode: 'Incremental'
        deploymentName: 'cm-arm-deployment'
        deploymentOutputs: 'cm-arm-deployment-outputs'

    - task: PowerShell@2
      displayName: 'get deployent outputs'
      enabled: true
      inputs:
        pwsh: true
        targetType: 'inline'
        script: |
          $out=ConvertFrom-Json '$(cm-arm-deployment-outputs)'
          $static_rul=$out.staticweb_Url.value
          $func_name=$out.functionsappName.value
          $func_rul=$out.functionsapp_Url.value

          Write-Host "##vso[task.setvariable variable=staticweb_Url]$static_rul"
          Write-Host "##vso[task.setvariable variable=functionsappName]$func_name"
          Write-Host "##vso[task.setvariable variable=functionsapp_Url]$func_rul"

          # Write-Host '$(cm-arm-deployment-outputs)'
          # $face_url=$out.face_API_Endpoint.value
          # $face_key=$out.face_API_Subscription_Key.value
          # $facedb_url=$out.faceCountDB_Endpoint.value
          # $facedb_key=$out.faceCountDB_Key.value
          # Write-Host "##vso[task.setvariable variable=face_API_Endpoint]$face_url"
          # Write-Host "##vso[task.setvariable variable=face_API_Subscription_Key]$face_key"
          # Write-Host "##vso[task.setvariable variable=faceCountDB_Endpoint]$facedb_url"
          # Write-Host "##vso[task.setvariable variable=faceCountDB_Key]$facedb_key"

    - task: PowerShell@2
      displayName: 'check variables'
      enabled: true
      inputs:
        pwsh: true
        targetType: 'inline'
        script: |
          Write-Host '$(staticweb_Url)'
          Write-Host '$(functionsappName)'
          Write-Host '$(functionsapp_Url)'
