# .NET Core Console Application

trigger:
  branches:
   include:
     - master
  paths:
    include:
      - CongestionCameraConsoleApp/*
      - VideoFrameAnalyzerLib/*
      - Pipelines/azure-pipelines-console.yml

pr:
  branches:
   include:
     - master
  paths:
    include:
      - CongestionCameraConsoleApp/*
      - VideoFrameAnalyzerLib/*
      - Pipelines/azure-pipelines-console.yml

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'e5539dec-f14a-4c79-912a-8e0f50efc5e6'

  # Agent VM image name
  vmImageName: 'windows-latest'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/CongestionCameraConsoleApp'

  # .NET Core configrations
  dotnetVersion: '3.1.x'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build .NET Core App'

  jobs:
  - job: Build
    displayName: 'Build Console App'
    pool:
      vmImage: $(vmImageName)
    variables:
    - group: cm-resource-param

    steps:
    - task: UseDotNet@2
      displayName: 'Install latest .NET Core SDK'
      inputs:
        packageType: sdk
        version: $(dotnetVersion)
        installationPath: $(Agent.ToolsDirectory)/dotnet
      enabled: false
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(workingDirectory)/publish_output --configuration $(buildConfiguration)
      enabled: false

    - task: PowerShell@2
      displayName: 'create secrets.json'
      inputs:
        pwsh: true
        targetType: 'inline'
        script: |
          $out1='{"Settings": {"Face_API_Endpoint": "' + $env:ENV_FACE_URL + '"}}'
          $out2='{"Settings": {"Face_API_Endpoint": "' + $(face_API_Endpoint) + '"}}'
          # New-Item $(workingDirectory)/publish_output/secrets.json
          # Set-Content $(workingDirectory)/publish_output/secrets.json $out2
          Write-Host $out1
          Write-Host $out2
      env:
        ENV_FACE_URL: $(face_API_Endpoint)
        ENV_FACE_KEY: $(face_API_Subscription_Key)
        ENV_FACEDB_URL: $(faceCountDB_Endpoint)
        ENV_FACEDB_KEY: $(faceCountDB_Key)

    - publish: $(workingDirectory)/publish_output
      artifact: drop
      enabled: false
